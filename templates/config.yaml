---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "diaspora.fullname" . }}-config
  labels:
    app.kubernetes.io/name: {{ include "diaspora.name" . }}
    helm.sh/chart: {{ include "diaspora.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  diaspora.yml: |
    configuration:
      environment: 
        {{- if .Values.diaspora.config.configuration.environment.url }}
        url: {{ .Values.diaspora.config.configuration.environment.url }}
        {{- else }}
        url: {{ include "diaspora.hostURL" . }}
        {{ end}}

        certificate_authorities: '/etc/ssl/certs/ca-certificates.crt'

        {{- if .Values.diaspora.config.configuration.environment.redis }}
        redis: {{ .Values.diaspora.config.configuration.environment.redis }}
        {{- else }}
        redis: {{ include "diaspora.redisUrl" . }}
        {{ end}}

        require_ssl: {{ .Values.diaspora.config.configuration.environment.require_ssl }}

        single_process_mode: {{ .Values.diaspora.config.configuration.environment.single_process_mode }}

        ## Sidekiq - background processing
        sidekiq: |
{{- toYaml .Values.diaspora.config.configuration.environment.sidekiq | nindent 10 }}

        s3: |
{{- toYaml .Values.diaspora.config.configuration.environment.s3 | nindent 10 }}

        assets: |
{{- toYaml .Values.diaspora.config.configuration.environment.assets | nindent 10 }}

        #pubsub_server: {{ .Values.diaspora.config.configuration.environment.pubsub_server }}

        ## Logger configuration
        logging: |
{{- toYaml .Values.diaspora.config.configuration.environment.logging | nindent 10 }}

      ## Settings affecting how ./script/server behaves.
      server: 
        listen: {{ printf "0.0.0.0:%g" .Values.service.port }}

        #pid: 'tmp/pids/web.pid'

        rails_environment: {{ .Values.diaspora.config.configuration.server.rails_environment }}

        stderr_log: {{ .Values.diaspora.config.configuration.server.stderr_log }}
        stdout_log: {{ .Values.diaspora.config.configuration.server.stdout_log }}

        unicorn_worker: {{ .Values.diaspora.config.configuration.server.unicorn_worker }}

        unicorn_timeout: {{ .Values.diaspora.config.configuration.server.unicorn_timeout }}

        embed_sidekiq_worker: {{ .Values.diaspora.config.configuration.server.embed_sidekiq_worker }}

        sidekiq_workers: {{ .Values.diaspora.config.configuration.server.sidekiq_workers }}

      chat: |
{{- toYaml .Values.diaspora.config.configuration.chat | nindent 8 }}

      map: |
{{- toYaml .Values.diaspora.config.configuration.map | nindent 8 }}

      privacy: |
{{- toYaml .Values.diaspora.config.configuration.privacy | nindent 8 }}

      settings: |
{{- toYaml .Values.diaspora.config.configuration.settings | nindent 8 }}

      services: |
{{- toYaml .Values.diaspora.config.configuration.services | nindent 8 }}

      mail: |
{{- toYaml .Values.diaspora.config.configuration.mail | nindent 8 }}

      admins: |
{{- toYaml .Values.diaspora.config.configuration.admins | nindent 8 }}

    production: |
{{- toYaml .Values.diaspora.config.production | nindent 6 }}
    development: |
{{- toYaml .Values.diaspora.config.development | nindent 6 }}
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "diaspora.fullname" . }}-database
  labels:
    app.kubernetes.io/name: {{ include "diaspora.name" . }}
    helm.sh/chart: {{ include "diaspora.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  database.yml: |
    postgresql: &postgresql
      adapter: postgresql
      host: {{ (include "postgresql.host" .) }}
      port: {{ .Values.postgresql.global.postgresql.servicePort }}
      username: {{ .Values.postgresql.global.postgresql.postgresqlUsername | quote }}
      password: {{ .Values.postgresql.global.postgresql.postgresqlPassword | quote }}
      encoding: unicode

    mysql: &mysql
      adapter: mysql2
      host: {{ (include "mysql.host" .) }}
      port: {{ .Values.mysql.servicePort }}
      username: {{ .Values.mysql.db.user | quote }}
      password: {{ .Values.mysql.db.password | quote }}
      #  socket: /tmp/mysql.sock
      encoding: utf8mb4
      collation: utf8mb4_bin


    # Comment the postgresql line and uncomment the mysql line
    # if you want to use mysql
    common: &common
      # Choose one of the following
      {{ if .Values.diaspora.database.postgresql.enabled }}
      <<: *postgresql
      {{ end }}
      {{ if .Values.diaspora.database.mysql.enabled }}
      <<: *mysql
      {{ end }}

      # Should match environment.sidekiq.concurrency
      #pool: 25

    ##################################################
    #### CONFIGURE ABOVE #############################
    ##################################################

    # Normally you don't need to touch anything here

    combined: &combined
      <<: *common
    development:
      <<: *combined
      database: diaspora_development
    production:
      <<: *combined
      database: diaspora_production
    test:
      <<: *combined
      database: "diaspora_test"
    integration1:
      <<: *combined
      database: diaspora_integration1
    integration2:
      <<: *combined
      database: diaspora_integration2
